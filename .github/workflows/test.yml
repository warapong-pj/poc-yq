name: Update Kubernetes Manifest

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      service:
        description: 'The name of the container image to use'
        required: true
        default: 'hpa-example'
      environment:
        required: true
        default: 'dev'
      image:
        description: 'The name of the container image to use'
        required: true
        default: 'registry.k8s.io/hpa-example'
      tag:
        description: 'The tag of the container image'
        required: true
        default: 'latest'

jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update tag container image
        run: |
          #!/bin/sh

          set -e

          # --- 1. Validate Inputs ---
          IMAGE_NAME="${{ github.event.inputs.image }}"
          IMAGE_TAG="${{ github.event.inputs.tag }}"

          if [ -z "$IMAGE_NAME" ] || [ -z "$IMAGE_TAG" ]; then
            echo "::error::'image_name' and 'image_tag' inputs cannot be empty."
            exit 1
          fi

          # --- 2. Install yq ---
          curl -s -L https://github.com/mikefarah/yq/releases/download/v4.45.4/yq_linux_amd64.tar.gz | tar xzf -
          mv yq_linux_amd64 /usr/local/bin/yq

          # --- 3. Update Manifest ---
          IMAGE_FULL_NAME="$IMAGE_NAME:$IMAGE_TAG"
          TARGET_DIR="${{ github.event.inputs.service }}/overlays/${{ github.event.inputs.environment }}/"
          TARGET_FILE="$TARGET_DIR/kustomization.yaml"

          yq -i ".images[0].newTag = \"$IMAGE_TAG\"" "$TARGET_FILE"

          # --- 4. Verify Change ---
          echo "--- Verifying content of $TARGET_FILE ---"
          curl -s -L -O "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/kubectl
          kubectl kustomize "$TARGET_DIR"
